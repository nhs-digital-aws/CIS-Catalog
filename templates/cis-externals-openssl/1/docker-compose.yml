version: '2'
services:
  IAM-Database:
    restart: always
    labels:
      io.rancher.scheduler.affinity:host_label: stackType=auth
      environment_name: ${env_shortcode}
      service_name: Database
      io.rancher.container.dns: true
      project.service.name: iam-database
      project.name: cis
      project.stack: cis-externals-openssl
    tty: true
    image: ${registry_url}/cis-dbs:${externals_version}
    stdin_open: true
    environment:
      urs_db_snapshot: ${urs_db_snapshot}

  Dir:
    restart: always
    labels:
      io.rancher.scheduler.affinity:host_label: stackType=auth
      environment_name: ${env_shortcode}
      service_name: Dir
      io.rancher.container.dns: true
      project.service.name: dir
      project.name: cis
      project.stack: cis-externals-openssl
    tty: true
    image: ${registry_url}/dir:${externals_version}
    stdin_open: true

  OpenSSL-HTTP:
    ports:
      - 5000:5000
    restart: always
    labels:
      io.rancher.scheduler.affinity:host_label: stackType=auth
      io.rancher.container.pull_image: always
      environment_name: ${env_shortcode}
      service_name: openssl-http
      io.rancher.container.dns: true
      project.service.name: openssl-http
      project.name: cis
      project.stack: cis-externals-openssl
    tty: true
    image: ${registry_url}/urs-openssl-http:${externals_version}
    stdin_open: true
    volumes:
    - /home/rancher/${env_shortcode}/pki-openssl:/pki
    - /var/log/iam:/var/log/iam
    environment:
      PKIPASS: ${openssl_pki_password}

  Redis:
    ports:
      - 6379:6379
    restart: always
    labels:
      io.rancher.scheduler.affinity:host_label: stackType=auth
      environment_name: ${env_shortcode}
      service_name: redis
      io.rancher.container.dns: true
      project.service.name: redis
      project.name: cis
      project.stack: cis-externals-openssl
    tty: true
    image: ${registry_url}/redis:3.2.4
    stdin_open: true

  Nfs:
    restart: always
    labels:
      io.rancher.scheduler.affinity:host_label: stackType=auth
      environment_name: ${env_shortcode}
      service_name: nfs
      project.service.name: nfs
      project.name: cis
      project.stack: cis-externals-openssl
    tty: true
    image: ${registry_url}/nfs-server-ubuntu:${externals_version}
    stdin_open: true
    volumes:
    - /home/rancher/gluster:/gv0
    privileged: true
    command: /gv0

  PKI-LDAP-LB:
    image: rancher/lb-service-haproxy:v0.7.15
    expose:
    - 389:389/tcp
    labels:
      io.rancher.scheduler.affinity:host_label: stackType=auth
      io.rancher.container.agent.role: environmentAdmin
      io.rancher.container.create_agent: 'true'

  S3FS:
    labels:
      environment_name: ${env_shortcode}
      io.rancher.container.pull_image: always
      service_name: S3FS
      project.service.name: s3fs
      project.name: cis
      project.stack: cis-externals-openssl
      io.rancher.scheduler.affinity:host_label_soft: stackType=auth
    cap_add:
      - SYS_ADMIN
      - MKNOD
    privileged: true
    devices:
      - "/dev/fuse"
    environment:
      BUCKETNAME: "${aws_account_id}-cis-data -o nonempty -o iam_role=${env_shortcode}-${tag_name}-ecsFromRancher"
      UID: "500"
      GID: "500"
    volumes:
    - "/home/rancher:/home/shared/s3:shared"
    tty: true
    stdin_open: true
    image: "camptocamp/s3fs:1.80-2"
