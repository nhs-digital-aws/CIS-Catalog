version: '2'
services:
  IAM-Database:
    restart: always
    labels:
      io.rancher.scheduler.affinity:host_label: stackType=auth
      environment_name: ${env_shortcode}
      service_name: Database
      io.rancher.container.dns: true
      project.service.name: iam-database
      project.name: cis
      project.stack: cis-externals
    tty: true
    image: ${registry_url}/cis-dbs:${externals_version}
    stdin_open: true
    environment:
      urs_db_snapshot: ${urs_db_snapshot}

  Dir:
    restart: always
    labels:
      io.rancher.scheduler.affinity:host_label: stackType=auth
      environment_name: ${env_shortcode}
      service_name: Dir
      io.rancher.container.dns: true
      project.service.name: dir
      project.name: cis
      project.stack: cis-externals
    tty: true
    image: ${registry_url}/dir:${externals_version}
    stdin_open: true

#  PKI-LDAP:
#    restart: always
#    labels:
#      io.rancher.scheduler.affinity:host_label: stackType=auth
#      environment_name: ${env_shortcode}
#      service_name: pki-ldap
#      io.rancher.container.dns: true
#      project.service.name: pki-ldap
#      project.name: cis
#      project.stack: cis-externals
#    tty: true
#    image: ${registry_url}/dir:${externals_version}
#    stdin_open: true

  Nfs:
    restart: always
    labels:
      io.rancher.scheduler.affinity:host_label: stackType=auth
      environment_name: ${env_shortcode}
      service_name: nfs
      project.service.name: nfs
      project.name: cis
      project.stack: cis-externals
    tty: true
    image: ${registry_url}/nfs-server-ubuntu:${externals_version}
    stdin_open: true
    volumes:
    - /home/rancher/gluster:/gv0
    privileged: true
    command: /gv0

#  RootCA:
#    restart: always
#    labels:
#      io.rancher.scheduler.affinity:host_label: stackType=auth
#      environment_name: ${env_shortcode}
#      service_name: rootca
#      io.rancher.container.dns: true
#      io.rancher.container.hostname_override: container_name
#      project.service.name: root-ca
#      project.name: cis
#      project.stack: cis-externals
#    container_name: rootca
#    privileged: true
#    tty: true
#    image: ${registry_url}/rootca:latest
#    stdin_open: true
#    links:
#    - RootCA:rootca
#    - PKI-LDAP:dir
#
#  SubCA:
#    restart: always
#    labels:
#      io.rancher.scheduler.affinity:host_label: stackType=auth
#      environment_name: ${env_shortcode}
#      service_name: subca
#      io.rancher.container.dns: true
#      io.rancher.container.hostname_override: container_name
#      project.service.name: sub-ca
#      project.name: cis
#      project.stack: cis-externals
#    privileged: true
#    tty: true
#    image: ${registry_url}/subca:latest
#    stdin_open: true
#    links:
#    - RootCA:rootca
#    - PKI-LDAP:dir
#
#  SubCC:
#    restart: always
#    labels:
#      io.rancher.scheduler.affinity:host_label: stackType=auth
#      environment_name: ${env_shortcode}
#      service_name: subcc
#      io.rancher.container.dns: true
#      project.service.name: sub-cc
#      project.name: cis
#      project.stack: cis-externals
#    privileged: true
#    tty: true
#    image: ${registry_url}/subcc:latest
#    stdin_open: true
#    links:
#    - RootCA:rootca
#    - PKI-LDAP:dir
#
#  PKI-LDAP-LB:
#    image: rancher/lb-service-haproxy:v0.9.1
#    expose:
#    - 389:389/tcp
#    labels:
#      io.rancher.scheduler.affinity:host_label: stackType=auth
#      io.rancher.container.agent.role: environmentAdmin
#      io.rancher.container.create_agent: 'true'

  Redis:
    image: rancher/external-service
    labels:
      project.service.name: redis
      project.name: cis
      project.stack: cis-externals
      io.rancher.scheduler.affinity:host_label_soft: stackType=auth

  Secure-Redis:
    image: vimagick/stunnel
    expose:
    - 6379:6379
    labels:
      io.rancher.scheduler.affinity:host_label: stackType=auth
      environment_name: ${env_shortcode}
      service_name: secure-redis
      io.rancher.container.dns: true
      io.rancher.container.hostname_override: container_name
      project.service.name: secure-redis
      project.name: cis
      project.stack: cis-externals
    environment:
      - CLIENT=yes
      - SERVICE=redis-cli
      - ACCEPT=secure-redis.cis-externals.rancher.internal:6379
      - CONNECT=redis.cis-externals.rancher.internal:6379
    tty: true
    restart: always
